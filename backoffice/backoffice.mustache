var express = require('express');
var router = express.Router();
var fs = require("fs");

{{#schemas}}
var {{schemaName}} = require('../Models/{{schemaName}}.js').{{schemaName}};
{{/schemas}}


{{#schemas}}
router.get('/{{schemaName}}', function(req, res){
    {{schemaName}}.all(function(rows){
        res.render('list', {
            title: '{{schemaName}}s',
            columns: Object.keys(new {{schemaName}}()).map(key => {
                return {
                    name: key
                };
            }),
            rows: rows.map(obj => {
                return {
                    properties: Object.keys(obj).map(key => {
                        return {
                            name: key,
                            value: obj[key]
                        }
                    }),
                    actions: [{
                        label: '',
                        link: './{{schemaName}}/detalhe/' + obj.id,
                        image: {
                            src: '../Images/read.png'
                        },
                        tooltip: 'Detalhe'
                    }, {
                        label: '',
                        link: './{{schemaName}}/editar/' + obj.id,
                        image: {
                            src: '../Images/edit.png'
                        },
                        tooltip: 'Editar'
                    }, {
                        label: '',
                        link: '#',
                        image: {
                            src: '../Images/delete.png'
                        },
                        tooltip: 'Apagar',
                        events: [{
                            name: "onclick",
                            function: "deleteRecord",
                            args: obj.id
                        }]

                    }]
                }
            })
        });
    });  
});

router.get('/{{schemaName}}/detalhe/:id', function(req, res){
    {{schemaName}}.get(req.params.id, function(rows){
        if(rows){
            var schema = JSON.parse(fs.readFileSync("Schemas/" + "{{{schemaName}}}".toLowerCase()+ "-schema.json"));
            res.render('details', {
                properties: rows.map(obj => {
                        return {
                             values: Object.keys(obj).map(key => {
                                 console.log(key);
                                return {
                                    name: getPropertyLabel(schema,key),
                                    value: obj[key]
                            }
                        })
                    }
                })
            });
        }
    });
});


{{/schemas}}

function getPropertyLabel(schema, property){
    if(schema.properties[property] != null){
        return schema.properties[property].label;
    }   
    return "";
}

module.exports = router;