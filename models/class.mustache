var database = require("../Database/sqlitedbm.js")("{{{dbName}}}");

class {{classTitle}}{
    constructor({{classProperties}}){
        {{{classConstructor}}}
    }
}

{{classTitle}}.prototype.save = function(callback){
    if (this.id){
        database.run("UPDATE {{table}} SET {{{update}}}  WHERE {{primaryKey}} "+"=?",[this ,this.id])
    }else{
        database.run("INSERT INTO {{table}} ({{columns}}) VALUES ({{questionMarks}})",this);
    }
}

module.exports.all = {{classTitle}}.all = function(callback){
    database.all("SELECT * FROM {{table}}",[],{{{classTitle}}},function(rows){
        callback(rows);
    });
}

module.exports.get = {{classTitle}}.get = function(id,callback){
    database.where("SELECT * FROM {{table}} WHERE {{primaryKey}} "+"=" + id, [], {{classTitle}}, function(rows){
        callback(rows);
    });
}

module.exports.delete = {{classTitle}}.delete = function(id,callback){
    database.run("DELETE FROM {{table}} WHERE {{primaryKey}}"+"=?", [id]);
}

module.exports.many = {{classTitle}}.many = function(model, id, callback){
    var modelToPlural = ""+model+"s";
    var tablename = relationManyToManyTableName("{{classTitle}}s",modelToPlural);
    database.all(`SELECT {{classTitle}}s.* FROM {{classTitle}}s INNER JOIN ${tablename} ON ${tablename}.{{primaryKey}} = {{classTitle}}s.{{primaryKey}} WHERE ${tablename}.${model.toLowerCase()}_id = ?`, [id], {{classTitle}}, callback);
}

module.exports.mappingDBtoObject = {{classTitle}}.mappingDBtoObject = {
    {{{map}}}
}

function relationManyToManyTableName(table1, table2){
    if(table1 < table2){
        return ""+table1+"_"+table2;
    }
    return ""+table2+"_"+table1; 
}

module.exports.{{classTitle}} = {{classTitle}};
